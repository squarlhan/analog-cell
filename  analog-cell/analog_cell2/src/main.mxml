<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"  creationComplete="initApp()" backgroundImage="123.jpg" verticalAlign="middle" horizontalAlign="center">
<mx:states>
		<mx:State name="ChangeCondition">
			<mx:RemoveChild target="{panel1}"/>
			<mx:AddChild position="lastChild">
				<mx:Panel x="98" y="98" width="549" height="323" layout="absolute" >
					<mx:Text x="28" y="24" text="Please input the conditions:" width="243" height="43" fontFamily="Georgia" fontSize="19"/>
					<mx:TextArea x="206" y="92" height="30" id="newPH"/>
					<mx:Text x="101" y="93" text="PH:" width="122" height="43" textAlign="center" fontFamily="Georgia" fontSize="17" fontStyle="italic" fontWeight="bold"/>
					<mx:Text x="64" y="144" text="temperature:" width="137" fontFamily="Georgia" fontSize="18" fontWeight="bold" fontStyle="italic"/>
					<mx:TextArea id="newTemp" x="206" y="141" height="30"/>
					<mx:TextArea x="206" y="195" height="31" id="newPower"/>
					<mx:Text x="123" y="202" text="Power:" fontFamily="Georgia" fontSize="16" fontWeight="bold" fontStyle="italic" textAlign="center"/>
					<mx:Button x="352" y="251" label="OK" width="62" id="ChangeOK" click="changeOK()"/>
					<mx:Button x="422" y="251" label="Go Back" id="Nochange" click="changeBack()"/>
				</mx:Panel>
			</mx:AddChild>
		</mx:State>
		<mx:State name="main"/>
	</mx:states>
<mx:Script>
	<![CDATA[
	  import mx.charts.chartClasses.AxisLabelSet;
      import mx.formatters.DateFormatter;
      import mx.charts.chartClasses.IAxis;
      import mx.collections.ArrayCollection;

      [Bindable] 
      public var testDatas:ArrayCollection;
            
      [Bindable]
      private var maxDate:Date;
      [Bindable]
      private var minDate:Date;
            
      private var timer:Timer;
      private var dateFormat:DateFormatter = new DateFormatter();
      private var dateVar:Date;
	private function initApp():void//动画界面初始化函数
	{
		//初始化曲线图
		dateFormat.formatString = "HH:NN:SS";      
        minDate = new Date();
        var dx:Date = new Date();
        dx.setMinutes(dx.getMinutes()+1, dx.getSeconds(), dx.getMilliseconds());
        maxDate = dx;
                
        dateVar = new Date();
        testDatas = new ArrayCollection([{date: dateVar, valueTest: 120} ]);
                   
        timer =  new Timer(1000);
        timer.addEventListener(TimerEvent.TIMER, getDatas)
        timer.start();  
        //此处还应添加其他初始化内容           
    }
	import mx.controls.Alert;
	private function ChangeConditions():void//改变状态按钮触发函数
	
	{
		Alert.show("Please input the condition!");
		currentState="ChangeCondition";
	}
	private function changeBack():void//从changeConditions不改变反应条件返回主状态
	{
		Alert.show("you have no changes and back to go on!");
		currentState="main";
	}	
	private function changeOK():void//改变反应条件返回函数有“OK”触发
	{
		Alert.show("OK!We change the conditions now!");
		currentState="main";
		if(newPH.text!="")
		{
			
		}
		if(newTemp.text!="")
		{
			StartTemp.dataField=newTemp.text;
		}
		if(newPower.text!="")
		{
			StartPower.dataField=newPower.text;
		}
		//此处还应有内部数据改变
	}
	private function mylabel(labelValue:Object, previousValue:Object, d:IAxis):String
	{
        var str:String = dateFormat.format(labelValue);
        return str;
    }
            
    private function getDatas(et:Event):void
   {
       var valueTestValue:int = Math.random()*50;
       var dm:Date = new Date();
       dm.setTime(dateVar.getTime());
       dm.setSeconds(dm.getSeconds()+1, dm.getMilliseconds());
       dateVar = dm;
                   
       if (dateVar.getTime()>maxDate.getTime())
       {
           maxDate = dateVar;
           var dx:Date = new Date();
           dx.setMinutes(dx.getMinutes()-1, dx.getSeconds(), dx.getMilliseconds());
           minDate = dx;
       }
       testDatas.addItem({date: dateVar, valueTest: valueTestValue});      
                
  }
   private function changeNowCondiyions():void
   {
   }
   private function Go_click():void
   {
     	var strUrl:URLRequest = new URLRequest("configure.html");//这个地址是Flex生成的html文件的地址
        navigateToURL(strUrl,"_self");
   }
	]]>
</mx:Script>
<mx:XMLListCollection id="dp">
	<mx:source>
		<mx:XMLList id="Data" xmlns="">
			<quote PH="7.0" Power="120" Temp="37`C"/>
		</mx:XMLList>
	</mx:source>
</mx:XMLListCollection>
	<mx:Panel  width="1158" height="542" layout="absolute" fontFamily="Georgia" id="panel1" >
		<mx:VideoDisplay x="10" y="10" width="533" height="210" source="俞敏洪励志演讲（完美版）.WMV" autoPlay="true"/>
		<mx:Button x="179" y="277" label=" Change Condition" width="167" height="42" click="ChangeConditions()"/>
		<mx:HBox x="10" y="225" width="533" height="34">
			<mx:Button label="Start" id="start" height="29" width="122"/>
			<mx:Button label="Hold" id="holdPlay" width="116" height="29"/>
			<mx:Button label="Restart" id="restart" width="113" height="32"/>
			<mx:Button label="Stop" id="stop" width="125" height="31"/>
		</mx:HBox>
		<mx:LineChart id="mychart" height="217" width="417" paddingRight="5" paddingLeft="5" showDataTips="true"  x="558">
            
            <mx:horizontalAxis>
                <mx:DateTimeAxis dataUnits="seconds" interval="5" minimum="{minDate}"   maximum="{maxDate}" labelFunction="mylabel" title="Time"/> 
            </mx:horizontalAxis>

            <mx:verticalAxis>
                <mx:LinearAxis baseAtZero="true" title="Power" />
            </mx:verticalAxis>

            <mx:series>
               <mx:LineSeries yField="valueTest" xField="date" displayName="TestData" dataProvider="{this.testDatas}"/>
            </mx:series>
        </mx:LineChart>
		<mx:VBox x="983" y="19" height="168" width="108">
			<mx:Button label="All" id="ShowAll" width="108" height="33"/>
			<mx:Button label="Power" id="ShowPower" width="108" height="31"/>
			<mx:Button label="PH" id="ShowPH" width="105" height="32"/>
			<mx:Button label="Temperature" id="ShowTemperature" width="105" height="29"/>
		</mx:VBox>
		<mx:HBox width="533" x="558" y="225" height="34">
			<mx:Button label="Hold" id="HoldChart" width="148" height="28"/>
			<mx:Button label="CountNow" id="countChart" width="181" height="28"/>
			<mx:Button label="Amplify" id="AmplifyChart" width="185" height="27"/>
		</mx:HBox>
		<mx:Text x="10" y="284" text="The Start Conditions" width="190" height="34" fontFamily="Georgia" fontWeight="bold" fontSize="15"/>
		<mx:VBox x="368" y="277" height="213" width="88">
			<mx:Button label="CountNow" width="83" height="84" id="CountData"/>
			<mx:Button label="Reset" width="83" height="96" id="Resetdata"/>
		</mx:VBox>
		<mx:Text x="464" y="288" text="Now Conditions" width="165" height="30" fontFamily="Georgia" fontWeight="bold" fontSize="16"/>
		<mx:VBox height="172" width="100" x="983" y="292">
			<mx:Button label="Exit" width="97" height="31"/>
			<mx:Button label="Go back" width="98" height="34" click="Go_click()"/>
			<mx:Button label="Help" width="95" height="34"/>
			<mx:Button label="About" width="98" height="39"/>
		</mx:VBox>
		<mx:DataGrid y="326" width="444" height="108" id="DataGrid" dataProvider="{this.testDatas}" x="494" textAlign="center">
			<mx:columns>
			    <mx:DataGridColumn headerText="Time" dataField="date"/>
				<mx:DataGridColumn headerText="PH" />
				<mx:DataGridColumn headerText="Power" dataField="valueTest"/>
				<mx:DataGridColumn headerText="Temperature" />
			</mx:columns>
		</mx:DataGrid>
		<mx:DataGrid x="29" y="337" height="97" id="StartGrid"  dataProvider="{dp}" editable="true" textAlign="center">
			<mx:columns>
				<mx:DataGridColumn id="StartPH" headerText="PH" dataField="@PH"/>
				<mx:DataGridColumn id="StartPower" headerText="Power" dataField="@Power"/>
				<mx:DataGridColumn id="StartTemp" headerText="Temperature" dataField="@Temp"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:Panel>
	
</mx:Application>
